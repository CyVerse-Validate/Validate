#!/usr/bin/env python
"""
Copyright 2012 Wordnik, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""
class StoredCredential:
    """NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually."""


    def __init__(self):
        self.swaggerTypes = {
            'credential': 'str',
            'default': 'bool',
            'expirationDate': 'datetime',
            'internalUsername': 'str',
            'parentType': 'str',
            'password': 'str',
            'server': 'UserCredentialServer',
            'type': 'str',
            'username': 'str',
            'valid': 'bool'

        }


        #The credential used to authenticate to the remote system. Depending on the authentication protocol of the remote system, this could be an OAuth Token, X.509 certificate, Kerberose token, or an private key..
        self.credential = None # str
        #Is this the default credential for this internal user of this type on this system?
        self.default = None # bool
        #The date the credential expires in ISO 8601 format.
        self.expirationDate = None # datetime
        #The username of the internal user associated with this credential.
        self.internalUsername = None # str
        #The system type this credential is associated with.
        self.parentType = None # str
        #The password on the remote system used to authenticate.
        self.password = None # str
        #The server from which a credential may be obtained.
        self.server = None # UserCredentialServer
        #The authentication type.
        self.type = None # str
        #The local username on the remote system used to authenticate.
        self.username = None # str
        #Is the credential still valid or has it expired?.
        self.valid = None # bool
        
